{"version":3,"file":"17.chunk.js","sources":["webpack:///./src/app/services/ServiceUrl.ts?08bc****","webpack:///./src/app/services/TransactionService.ts?ced4**","webpack:///./src/app/transactions/transactions.component.ts","webpack:///./src/app/transactions/transactions.module.ts","webpack:///./src/app/transactions/transactions.style.scss","webpack:///./src/app/transactions/transactions.template.html"],"sourcesContent":["import { Injectable, Inject } from '@angular/core';\nexport class ServiceUrl {\n   public baseUrl: string = \"http://13.234.59.147:4000/\";\n/*    public baseUrl:string = \"http://localhost:5000/\";*/\n/* public baseUrl: string = \"http://104.199.49.55:3000/\";*/\n    constructor() {\n\n    }\n    getUrl() {\n        return this.baseUrl;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[//n//r]//s*//.|//.)import//((.+)//)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/services/ServiceUrl.ts","import { Injectable, Inject } from '@angular/core';\nimport { Http, Headers, RequestOptions } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport { ServiceUrl } from './ServiceUrl';\n@Injectable()\nexport class TransactionService {\n    urlService = new ServiceUrl();\n    constructor(private http: Http) {\n\n    }\n    getProfitStatisticsByTime(time){\n        let body = JSON.stringify({ \"filterTime\" : time });\n        let headers = new Headers({ 'Content-Type': 'application/json' });\n        let options = new RequestOptions({ method: 'post', headers: headers });\n        return this.http.post(this.urlService.baseUrl + \"merchant/getProfitStatisticsByTime\", body, options)\n            .map(res => res.json());\n    }\n\n    getTransactionStatisticsByTimeRoute(time){\n        let body = JSON.stringify({ \"filterTime\" : time });\n        let headers = new Headers({ 'Content-Type': 'application/json' });\n        let options = new RequestOptions({ method: 'post', headers: headers });\n        return this.http.post(this.urlService.baseUrl + \"merchant/getTransactionStatisticsByTimeRoute\", body, options)\n            .map(res => res.json());\n    }\n    getTransactionData(transactionId) {\n        let body = JSON.stringify({ \"transactionId\" : transactionId });\n        let headers = new Headers({ 'Content-Type': 'application/json' });\n        let options = new RequestOptions({ method: 'post', headers: headers });\n        return this.http.post(this.urlService.baseUrl + \"merchant/getTransactionData\", body, options)\n            .map(res => res.json());\n    }\n\n      getProfitConfiguration(merchantProfit,bitpointProfit) {\n        let body = JSON.stringify({ \"merchantProfit\" : merchantProfit, \"bitpointProfit\":bitpointProfit });\n        let headers = new Headers({ 'Content-Type': 'application/json' });\n        let options = new RequestOptions({ method: 'post', headers: headers });\n        return this.http.post(this.urlService.baseUrl + \"adminConfiguration/addProfitConfiguration\", body, options)\n            .map(res => res.json());\n    }\n\n    getTransactionDetailsById(merchantId){\n\n        let body = JSON.stringify({ \"merchantId\":merchantId });\n        let headers = new Headers({ 'Content-Type': 'application/json' });\n        let options = new RequestOptions({ method: 'post', headers: headers });\n        return this.http.post(this.urlService.baseUrl + \"merchant/getTransactionsByMerchantId\", body, options)\n            .map(res => res.json());\n\n        \n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[//n//r]//s*//.|//.)import//((.+)//)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/services/TransactionService.ts","import { Component, ViewEncapsulation } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { TransactionService } from '../services/TransactionService';\nimport { MerchantdetailModel } from '../models/MerchantdetailModel';\n@Component({\n  selector: 'transactions',\n  styles: [require('./transactions.style.scss')],\n  template: require('./transactions.template.html'),\n  providers: [TransactionService],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class Transactions {\n\n  public merchantId:string;\n  public errordiv:boolean;\n  public merchantData:MerchantdetailModel;\n  constructor(public _transactionService: TransactionService,public router: Router, ) {\n    \n      if(localStorage.getItem(\"merchantId\")!=null || localStorage.getItem(\"merchantId\")!=undefined){\n        this.merchantId = localStorage.getItem(\"merchantId\");\n        this.getMerchantById();\n        localStorage.setItem(\"merchantId\",\"\");\n    } \n\n    \n  }\n\n  getTransactionDetailsForThisMerchant(elem){\n\n      console.log(localStorage.getItem(\"TransactionId\"));\n      localStorage.setItem(\"TransactionId\",elem);\n       this.router.navigate([\"/app/dashboard\"]);\n\n  }\n  getMerchantById(){\n    \n    this.merchantId = jQuery.trim(this.merchantId);\n      if(this.merchantId == undefined || this.merchantId.length==0){\n         this.errordiv = true;\n      }else{\n      \n        this.errordiv = false;\n\n          this._transactionService.getTransactionDetailsById(this.merchantId).subscribe(a=>{\n\n          this.merchantData = a.data; \n      \n          for(var i = 0 ; i < a.data.length; i++){\n               var d = new Date(+this.merchantData[i].transactionTime*1000);\n               this.merchantData[i].transactionTime =d ;\n          }\n      })\n\n\n      }\n  } \n\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[//n//r]//s*//.|//.)import//((.+)//)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/transactions/transactions.component.ts","import { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { Transactions } from './transactions.component';\r\n\r\nexport const routes = [\r\n  { path: '', component: Transactions, pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    Transactions\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    RouterModule.forChild(routes),\r\n  ]\r\n})\r\nexport default class TransactionsModule {\r\n  static routes = routes;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[//n//r]//s*//.|//.)import//((.+)//)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/transactions/transactions.module.ts","module.exports = \"/***********************************/\\n/**             Profitconfiguration     **/\\n/***********************************/\\n.subscriptionBox {\\n  width: 58%;\\n  margin: 0 auto;\\n  position: relative;\\n  height: 48px;\\n  margin-top: 10px;\\n  margin-bottom: 50px; }\\n\\n.input-wrapper {\\n  position: absolute;\\n  left: 0;\\n  height: 100%;\\n  top: 0;\\n  width: 70%; }\\n\\n.btn-wrapper {\\n  position: absolute;\\n  left: 70%;\\n  height: 100%;\\n  top: 0;\\n  width: 30%; }\\n\\n.btn-wrapper button, .input-wrapper input {\\n  width: 100%;\\n  height: 100%;\\n  height: 100%; }\\n\\n.left-heading, .right-value {\\n  position: relative;\\n  float: left; }\\n\\n.right-value {\\n  margin-left: 15px; }\\n\\n.left-heading p {\\n  font-weight: bold; }\\n\\n.errosDiv {\\n  width: 320px;\\n  margin: 0 auto; }\\n\\n.input-wrapper input {\\n  background: white;\\n  padding-left: 15px;\\n  border: none;\\n  border-top-left-radius: 3px;\\n  border-bottom-left-radius: 3px;\\n  font-size: 17.5 !important;\\n  font-family: 'Open Sans';\\n  font-weight: 500; }\\n\\n.btn-wrapper button {\\n  border: none;\\n  background: #64bbe1;\\n  color: white;\\n  font-family: 'Open Sans';\\n  border-radius: 4px;\\n  border-bottom-left-radius: 0;\\n  border-top-left-radius: 0;\\n  font-size: 24px; }\\n\\n.input-wrapper input::placeholder {\\n  color: #aaaaaa;\\n  font-style: italic;\\n  font-size: 17.5 !important;\\n  font-family: 'Open Sans';\\n  font-weight: 500; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/transactions/transactions.style.scss\n// module id = ./src/app/transactions/transactions.style.scss\n// module chunks = 17","module.exports = \"<ol class=\\\"breadcrumb\\\">\\r\\n    <li class=\\\"breadcrumb-item\\\">YOU ARE HERE</li>\\r\\n    <li class=\\\"breadcrumb-item active\\\">Transactions List</li>\\r\\n</ol>\\r\\n<h1 class=\\\"page-title\\\">Transactions <span class=\\\"fw-semi-bold\\\">List</span></h1>\\r\\n\\r\\n\\r\\n\\r\\n\\t<div class=\\\"errosDiv\\\" *ngIf=\\\"errordiv\\\">Enter a merchant Id</div>\\r\\n\\t\\t  <div class=\\\"subscriptionBox clearfix\\\">\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t\\t<div class=\\\"input-wrapper\\\">\\r\\n\\t\\t\\t\\t\\t<input type=\\\"text\\\" name=\\\"merchantId\\\" [(ngModel)]=\\\"merchantId\\\" class=\\\"custom-input\\\" placeholder=\\\"Enter merchant ID\\\">\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<div class=\\\"btn-wrapper\\\">\\r\\n\\t\\t\\t\\t\\t<button class=\\\"btn-subscribe\\\" (click)=\\\"getMerchantById()\\\" >Send</button>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t</div>\\r\\n\\r\\n\\r\\n<section class=\\\"widget\\\" widget>\\r\\n    <div class=\\\"widget-body table-responsive\\\">\\r\\n        <table class=\\\"table merchantsTable\\\">\\r\\n            <thead>\\r\\n                <tr>\\r\\n                    <th class=\\\"hidden-xs-down\\\">#</th>\\r\\n                    <th>Merchant Id</th>\\r\\n                    <th>Customer Address</th>\\r\\n                    <th>Sending Amount</th>\\r\\n                    <th>Transaction Id</th>\\r\\n                    <th style=\\\"width:300px\\\" >Transaction Time</th>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n                <tr *ngFor=\\\"let merchant of merchantData; let i = index\\\">\\r\\n                    <td class=\\\"hidden-xs-down\\\">{{i + 1}}</td>\\r\\n                    <td>\\r\\n                        {{merchant.merchantId}}\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        {{merchant.customerAddress}}\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        {{merchant.sendingAmount}}\\r\\n                    </td>\\r\\n                    <td>\\r\\n                           <a  (click)=\\\"getTransactionDetailsForThisMerchant(merchant.transactionId)\\\"> {{merchant.transactionId}}</a>\\r\\n                    </td>\\r\\n                    <td style=\\\"width:300px\\\" >\\r\\n                    {{merchant.transactionTime}}\\r\\n                    </td>\\r\\n                    <!--<td class=\\\"width-150\\\">\\r\\n                        <button class=\\\"btn btn-primary app-btn\\\" (click) = \\\"deleteMerchant(merchant._id)\\\">Delete</button>\\r\\n                    </td>-->\\r\\n                </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n    </div>\\r\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/transactions/transactions.template.html\n// module id = ./src/app/transactions/transactions.template.html\n// module chunks = 17"],"mappings":";;;;;;;AACA;AAEA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAVA;;;;;;;;;;ACDA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAGA;AA9CA;AAAA;;AAAA;AAgDA;;AAAA;AA/CA;;;;;;;;;;ACLA;AACA;AACA;AASA;AAKA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAnDA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AA+CA;;AAAA;AA9CA;;;;;;;;;;;ACXA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAYA;AAAA;AAEA;AADA;AAXA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAGA;AAAA;AAFA;AAEA;;;;;;;;ACvBA;;;;;;;ACAA;;;;","sourceRoot":""}