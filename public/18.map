{"version":3,"file":"18.chunk.js","sources":["webpack:///./src/app/profitconfiguration/Profitconfiguration.component.ts","webpack:///./src/app/profitconfiguration/profitconfiguration.module.ts","webpack:///./src/app/profitconfiguration/profitconfiguration.style.scss","webpack:///./src/app/profitconfiguration/profitconfiguration.template.html","webpack:///./src/app/services/ServiceUrl.ts?08bc*****","webpack:///./src/app/services/TransactionService.ts?ced4***"],"sourcesContent":["import { Component, ViewEncapsulation } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { TransactionService } from '../services/TransactionService';\n@Component({\n  selector: 'Profitconfiguration',\n  styles: [require('./profitconfiguration.style.scss')],\n  template: require('./profitconfiguration.template.html'),\n  providers: [TransactionService],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class Profitconfiguration {\n  public userName: string;\n  public userPassword: string;\n  public errorMessage: string;\n  public router: Router;\n  successalert: boolean = false;\n  public bitpointProfit: string;\n  public merchantProfit:string;\n  public failurealert:boolean=false;\n  constructor(public _transactionService: TransactionService, router: Router, ) {\n    this.router = router;\n  /*  if(localStorage.getItem(\"userLocal\")==null){\n        this.router.navigate([\"/login\"]);\n      }else{\n         \n      }*/\n  }\n\n  getProfits() {\n     this.successalert = false;\n     this.failurealert=false;\n    var error;\n    if (this.bitpointProfit == undefined) {\n        return false;\n    }\n\n    if (this.bitpointProfit == undefined ) {\n        return false;\n    }\n    var addition = parseFloat(this.bitpointProfit) + parseFloat(this.merchantProfit);\n    if(addition > 100 || addition<100 ){\n      error = true;\n      this.failurealert=true;\n     \n      console.log(addition);\n    }else{\n      this.failurealert=false;\n        error = false;\n    }\n    if (error) {\n      \n    } else {\n      this._transactionService.getProfitConfiguration(this.merchantProfit, this.bitpointProfit).subscribe(a => {\n        console.log(a);\n        if (a.code == 200) {\n          this.successalert = true;\n          this.bitpointProfit =undefined;\n          this.merchantProfit=undefined;\n           this.failurealert=false;\n        } else {\n          this.successalert = false;\n         \n        }\n\n\n\n      })\n    }\n\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[//n//r]//s*//.|//.)import//((.+)//)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/profitconfiguration/Profitconfiguration.component.ts","import { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { Profitconfiguration } from './Profitconfiguration.component';\r\n\r\nexport const routes = [\r\n  { path: '', component: Profitconfiguration, pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    Profitconfiguration\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    RouterModule.forChild(routes),\r\n  ]\r\n})\r\nexport default class LoginModule {\r\n  static routes = routes;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[//n//r]//s*//.|//.)import//((.+)//)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/profitconfiguration/profitconfiguration.module.ts","module.exports = \"/***********************************/\\n/**             Profitconfiguration     **/\\n/***********************************/\\n.centered-div {\\n  min-width: 800px;\\n  margin: 25px auto; }\\n\\n.myinputs {\\n  border: none;\\n  padding-left: 15px;\\n  height: 40px;\\n  border: 1px solid #ccc;\\n  width: 100%; }\\n\\n.getProfit {\\n  width: 70%;\\n  height: 40px;\\n  line-height: 40px;\\n  background: #EBC41C;\\n  border: none;\\n  font-size: 18px;\\n  font-weight: bold;\\n  color: white; }\\n\\n.successalert {\\n  width: 392px;\\n  margin: 25px auto; }\\n\\n.failurealert {\\n  width: 392px;\\n  margin: 25px auto; }\\n\\n.centered-div h3 {\\n  font-size: 22px;\\n  font-weight: 500;\\n  text-align: center;\\n  margin: 35px; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/profitconfiguration/profitconfiguration.style.scss\n// module id = ./src/app/profitconfiguration/profitconfiguration.style.scss\n// module chunks = 18","module.exports = \"\\r\\n\\r\\n<div class=\\\"centered-div\\\">\\r\\n\\r\\n    <h3>Calculate profit</h3>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"myinputs\\\" name=\\\"merchantProfit\\\" [(ngModel)]=\\\"merchantProfit\\\" placeholder=\\\"Enter Merchant Profit\\\">\\r\\n        </div>\\r\\n\\r\\n         <div class=\\\"col-md-4\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"myinputs\\\"  name=\\\"bitpointProfit\\\" [(ngModel)]=\\\"bitpointProfit\\\" placeholder=\\\"Enter Bitpoint Profit\\\">\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n            <button class=\\\"getProfit\\\" (click)=\\\"getProfits()\\\">Get Profits</button>\\r\\n        </div>\\r\\n\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"alert alert-success successalert\\\" *ngIf=\\\"successalert\\\">\\r\\n      Your information was successfully recived!\\r\\n    </div>\\r\\n    \\r\\n     <div class=\\\"alert alert-danger failurealert\\\" *ngIf=\\\"failurealert\\\">\\r\\n      Both amounts should add upto 100\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/profitconfiguration/profitconfiguration.template.html\n// module id = ./src/app/profitconfiguration/profitconfiguration.template.html\n// module chunks = 18","import { Injectable, Inject } from '@angular/core';\nexport class ServiceUrl {\n   public baseUrl: string = \"http://13.234.59.147:4000/\";\n/*    public baseUrl:string = \"http://localhost:5000/\";*/\n/* public baseUrl: string = \"http://104.199.49.55:3000/\";*/\n    constructor() {\n\n    }\n    getUrl() {\n        return this.baseUrl;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[//n//r]//s*//.|//.)import//((.+)//)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/services/ServiceUrl.ts","import { Injectable, Inject } from '@angular/core';\nimport { Http, Headers, RequestOptions } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport { ServiceUrl } from './ServiceUrl';\n@Injectable()\nexport class TransactionService {\n    urlService = new ServiceUrl();\n    constructor(private http: Http) {\n\n    }\n    getProfitStatisticsByTime(time){\n        let body = JSON.stringify({ \"filterTime\" : time });\n        let headers = new Headers({ 'Content-Type': 'application/json' });\n        let options = new RequestOptions({ method: 'post', headers: headers });\n        return this.http.post(this.urlService.baseUrl + \"merchant/getProfitStatisticsByTime\", body, options)\n            .map(res => res.json());\n    }\n\n    getTransactionStatisticsByTimeRoute(time){\n        let body = JSON.stringify({ \"filterTime\" : time });\n        let headers = new Headers({ 'Content-Type': 'application/json' });\n        let options = new RequestOptions({ method: 'post', headers: headers });\n        return this.http.post(this.urlService.baseUrl + \"merchant/getTransactionStatisticsByTimeRoute\", body, options)\n            .map(res => res.json());\n    }\n    getTransactionData(transactionId) {\n        let body = JSON.stringify({ \"transactionId\" : transactionId });\n        let headers = new Headers({ 'Content-Type': 'application/json' });\n        let options = new RequestOptions({ method: 'post', headers: headers });\n        return this.http.post(this.urlService.baseUrl + \"merchant/getTransactionData\", body, options)\n            .map(res => res.json());\n    }\n\n      getProfitConfiguration(merchantProfit,bitpointProfit) {\n        let body = JSON.stringify({ \"merchantProfit\" : merchantProfit, \"bitpointProfit\":bitpointProfit });\n        let headers = new Headers({ 'Content-Type': 'application/json' });\n        let options = new RequestOptions({ method: 'post', headers: headers });\n        return this.http.post(this.urlService.baseUrl + \"adminConfiguration/addProfitConfiguration\", body, options)\n            .map(res => res.json());\n    }\n\n    getTransactionDetailsById(merchantId){\n\n        let body = JSON.stringify({ \"merchantId\":merchantId });\n        let headers = new Headers({ 'Content-Type': 'application/json' });\n        let options = new RequestOptions({ method: 'post', headers: headers });\n        return this.http.post(this.urlService.baseUrl + \"merchant/getTransactionsByMerchantId\", body, options)\n            .map(res => res.json());\n\n        \n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// node_modules/angular2-template-loader!./~/string-replace-loader?{\"search\":\"(System|SystemJS)(.*[//n//r]//s*//.|//.)import//((.+)//)\",\"replace\":\"$1.import($3).then(mod => (mod.__esModule && mod.default) ? mod.default : mod)\",\"flags\":\"g\"}!./src/app/services/TransactionService.ts"],"mappings":";;;;;;;AAAA;AACA;AACA;AAQA;AASA;AAAA;AAJA;AAGA;AAEA;AACA;;;;AAIA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAIA;AACA;AAEA;AAlEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AA8DA;;AAAA;AA7DA;;;;;;;;;;ACVA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAYA;AAAA;AAEA;AADA;AAXA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAAA;AAGA;AAAA;AAFA;AAEA;;;;;;;;ACvBA;;;;;;;ACAA;;;;;;;;;ACCA;AAEA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAVA;;;;;;;;;;ACDA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAGA;AA9CA;AAAA;;AAAA;AAgDA;;AAAA;AA/CA;;;;;","sourceRoot":""}